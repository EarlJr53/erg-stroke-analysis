<?xml version="1.0" encoding="utf-8"?>
<mscript xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd">
<version>9.12</version>
<release>2022a</release>
<date>2022-12-06</date>
<cell>
<count>1</count>
<mcode>handle = load("initial_data\initial_handle.mat");
seat = load("initial_data\initial_seat.mat");
range = timerange('29-Nov-2022 16:50:17.905','29-Nov-2022 16:50:56.000','closed');
handle.Acceleration = handle.Acceleration(range, :);
handle.Orientation = handle.Orientation(range, :);
seat.Acceleration = seat.Acceleration(range, :);
seat.Orientation = seat.Orientation(range, :);
T1 = '16:50:17.905';
T2 = '16:50:39.019';
t1 = datevec(T1,'HH:MM:SS.FFF');
t2 = datevec(T2,'HH:MM:SS.FFF');
elapsed = etime(t2, t1);
slope = (264.677 - 2.4685)/elapsed;
x_int = 2.4685;

slope_handle = (-409.212 + 137.799)/(9.558 - 2.462);
handle.Velocity = timetable(handle.Acceleration.Timestamp, cumtrapz(handle.Acceleration.X), cumtrapz(handle.Acceleration.Y), cumtrapz(handle.Acceleration.Z), 'VariableNames',{'X','Y','Z'});

handle.Position = timetable(handle.Velocity.Time, cumtrapz(handle.Velocity.X), cumtrapz(handle.Velocity.Y), cumtrapz(handle.Velocity.Z), 'VariableNames',{'X','Y','Z'});

seat.Velocity = timetable(seat.Acceleration.Timestamp, cumtrapz(seat.Acceleration.X), cumtrapz(seat.Acceleration.Y), cumtrapz(seat.Acceleration.Z), 'VariableNames',{'X','Y','Z'});

seat.Position = timetable(seat.Velocity.Time, cumtrapz(seat.Velocity.X), cumtrapz(seat.Velocity.Y), cumtrapz(seat.Velocity.Z), 'VariableNames',{'X','Y','Z'});
velocity_sync = synchronize(handle.Velocity, seat.Velocity, 'union', 'linear');

normal_time = velocity_sync.Time.Second - velocity_sync.Time.Second(1,:);

normal_seat = velocity_sync.Y_2 - (slope*normal_time + x_int);

normal_handle = velocity_sync.X_1 - slope_handle*normal_time;

velo_normal = [normal_time normal_seat normal_handle];


figure(2);
hold on;
plot(velo_normal(:,1), velo_normal(:,2))
plot(velo_normal(:,1), velo_normal(:,3))
hold off;

% stackedplot(handle.Acceleration)
% stackedplot(handle.Velocity)
% stackedplot(handle.Position)
%
% stackedplot(seat.Acceleration)
% stackedplot(seat.Velocity)
% stackedplot(seat.Position)</mcode>
<mcode-xmlized>
<mwsh:code xml:space="preserve">handle = load(<mwsh:strings xml:space="preserve">"initial_data\initial_handle.mat"</mwsh:strings>);
seat = load(<mwsh:strings xml:space="preserve">"initial_data\initial_seat.mat"</mwsh:strings>);
range = timerange(<mwsh:strings xml:space="preserve">'29-Nov-2022 16:50:17.905'</mwsh:strings>,<mwsh:strings xml:space="preserve">'29-Nov-2022 16:50:56.000'</mwsh:strings>,<mwsh:strings xml:space="preserve">'closed'</mwsh:strings>);
handle.Acceleration = handle.Acceleration(range, :);
handle.Orientation = handle.Orientation(range, :);
seat.Acceleration = seat.Acceleration(range, :);
seat.Orientation = seat.Orientation(range, :);
T1 = <mwsh:strings xml:space="preserve">'16:50:17.905'</mwsh:strings>;
T2 = <mwsh:strings xml:space="preserve">'16:50:39.019'</mwsh:strings>;
t1 = datevec(T1,<mwsh:strings xml:space="preserve">'HH:MM:SS.FFF'</mwsh:strings>);
t2 = datevec(T2,<mwsh:strings xml:space="preserve">'HH:MM:SS.FFF'</mwsh:strings>);
elapsed = etime(t2, t1);
slope = (264.677 - 2.4685)/elapsed;
x_int = 2.4685;

slope_handle = (-409.212 + 137.799)/(9.558 - 2.462);
handle.Velocity = timetable(handle.Acceleration.Timestamp, cumtrapz(handle.Acceleration.X), cumtrapz(handle.Acceleration.Y), cumtrapz(handle.Acceleration.Z), <mwsh:strings xml:space="preserve">'VariableNames'</mwsh:strings>,{<mwsh:strings xml:space="preserve">'X'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Y'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Z'</mwsh:strings>});

handle.Position = timetable(handle.Velocity.Time, cumtrapz(handle.Velocity.X), cumtrapz(handle.Velocity.Y), cumtrapz(handle.Velocity.Z), <mwsh:strings xml:space="preserve">'VariableNames'</mwsh:strings>,{<mwsh:strings xml:space="preserve">'X'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Y'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Z'</mwsh:strings>});

seat.Velocity = timetable(seat.Acceleration.Timestamp, cumtrapz(seat.Acceleration.X), cumtrapz(seat.Acceleration.Y), cumtrapz(seat.Acceleration.Z), <mwsh:strings xml:space="preserve">'VariableNames'</mwsh:strings>,{<mwsh:strings xml:space="preserve">'X'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Y'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Z'</mwsh:strings>});

seat.Position = timetable(seat.Velocity.Time, cumtrapz(seat.Velocity.X), cumtrapz(seat.Velocity.Y), cumtrapz(seat.Velocity.Z), <mwsh:strings xml:space="preserve">'VariableNames'</mwsh:strings>,{<mwsh:strings xml:space="preserve">'X'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Y'</mwsh:strings>,<mwsh:strings xml:space="preserve">'Z'</mwsh:strings>});
velocity_sync = synchronize(handle.Velocity, seat.Velocity, <mwsh:strings xml:space="preserve">'union'</mwsh:strings>, <mwsh:strings xml:space="preserve">'linear'</mwsh:strings>);

normal_time = velocity_sync.Time.Second - velocity_sync.Time.Second(1,:);

normal_seat = velocity_sync.Y_2 - (slope*normal_time + x_int);

normal_handle = velocity_sync.X_1 - slope_handle*normal_time;

velo_normal = [normal_time normal_seat normal_handle];


figure(2);
hold <mwsh:strings xml:space="preserve">on</mwsh:strings>;
plot(velo_normal(:,1), velo_normal(:,2))
plot(velo_normal(:,1), velo_normal(:,3))
hold <mwsh:strings xml:space="preserve">off</mwsh:strings>;

<mwsh:comments xml:space="preserve">% stackedplot(handle.Acceleration)</mwsh:comments>
<mwsh:comments xml:space="preserve">% stackedplot(handle.Velocity)</mwsh:comments>
<mwsh:comments xml:space="preserve">% stackedplot(handle.Position)</mwsh:comments>
<mwsh:comments xml:space="preserve">%</mwsh:comments>
<mwsh:comments xml:space="preserve">% stackedplot(seat.Acceleration)</mwsh:comments>
<mwsh:comments xml:space="preserve">% stackedplot(seat.Velocity)</mwsh:comments>
<mwsh:comments xml:space="preserve">% stackedplot(seat.Position)</mwsh:comments></mwsh:code>
</mcode-xmlized>
<mcode-count>1</mcode-count>
<cellOutputTarget>1</cellOutputTarget>
<img src="erg_analysis_01.png"/>
</cell>
<originalCode>handle = load("initial_data\initial_handle.mat");
seat = load("initial_data\initial_seat.mat");
range = timerange('29-Nov-2022 16:50:17.905','29-Nov-2022 16:50:56.000','closed');
handle.Acceleration = handle.Acceleration(range, :);
handle.Orientation = handle.Orientation(range, :);
seat.Acceleration = seat.Acceleration(range, :);
seat.Orientation = seat.Orientation(range, :);
T1 = '16:50:17.905';
T2 = '16:50:39.019';
t1 = datevec(T1,'HH:MM:SS.FFF');
t2 = datevec(T2,'HH:MM:SS.FFF');
elapsed = etime(t2, t1);
slope = (264.677 - 2.4685)/elapsed;
x_int = 2.4685;

slope_handle = (-409.212 + 137.799)/(9.558 - 2.462);
handle.Velocity = timetable(handle.Acceleration.Timestamp, cumtrapz(handle.Acceleration.X), cumtrapz(handle.Acceleration.Y), cumtrapz(handle.Acceleration.Z), 'VariableNames',{'X','Y','Z'});

handle.Position = timetable(handle.Velocity.Time, cumtrapz(handle.Velocity.X), cumtrapz(handle.Velocity.Y), cumtrapz(handle.Velocity.Z), 'VariableNames',{'X','Y','Z'});

seat.Velocity = timetable(seat.Acceleration.Timestamp, cumtrapz(seat.Acceleration.X), cumtrapz(seat.Acceleration.Y), cumtrapz(seat.Acceleration.Z), 'VariableNames',{'X','Y','Z'});

seat.Position = timetable(seat.Velocity.Time, cumtrapz(seat.Velocity.X), cumtrapz(seat.Velocity.Y), cumtrapz(seat.Velocity.Z), 'VariableNames',{'X','Y','Z'});
velocity_sync = synchronize(handle.Velocity, seat.Velocity, 'union', 'linear');

normal_time = velocity_sync.Time.Second - velocity_sync.Time.Second(1,:);

normal_seat = velocity_sync.Y_2 - (slope*normal_time + x_int);

normal_handle = velocity_sync.X_1 - slope_handle*normal_time;

velo_normal = [normal_time normal_seat normal_handle];


figure(2);
hold on;
plot(velo_normal(:,1), velo_normal(:,2))
plot(velo_normal(:,1), velo_normal(:,3))
hold off;

% stackedplot(handle.Acceleration)
% stackedplot(handle.Velocity)
% stackedplot(handle.Position)
% 
% stackedplot(seat.Acceleration)
% stackedplot(seat.Velocity)
% stackedplot(seat.Position)</originalCode>
<m-file>erg_analysis</m-file>
<filename>C:\Users\bmoss\Documents\GitHub\erg-stroke-analysis\erg_analysis.mlx</filename>
<outputdir>C:\Users\bmoss\Documents\GitHub\erg-stroke-analysis\docs\_posts\published</outputdir>
</mscript>
